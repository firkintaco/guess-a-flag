import{B as I,C as y,D as V,x as F,g as h,p as U,a as j,w as b,c as w,F as q}from"../chunks/runtime.W3UjnrTG.js";import{A as M,i as k,B as R,a as v,C as N,c as D,f as g,s as O,b as W,u as z,d as P,o as G,D as H,e as B,E as J,F as x}from"../chunks/disclose-version.73gxhAIW.js";import{o as K}from"../chunks/main-client.xzPqCEBL.js";function Q(a){return class extends X{constructor(e){super({component:a,...e})}}}class X{#e={};#t;constructor(e){this.#t=M(e.component,{target:e.target,props:{...e.props,$$events:this.#e},context:e.context,intro:e.intro,recover:e.recover});for(const t of Object.keys(this.#t))t==="$set"||t==="$destroy"||I(this,t,{get(){return this.#t[t]},set(n){this.#t[t]=n},enumerable:!0})}$set(e){this.#t.$set(e)}$on(e,t){this.#e[e]=this.#e[e]||[];const n=(...i)=>t.call(this,...i);return this.#e[e].push(n),()=>{this.#e[e]=this.#e[e].filter(i=>i!==n)}}$destroy(){this.#t.$destroy()}}const Y="modulepreload",Z=function(a,e){return new URL(a,e).href},A={},E=function(e,t,n){let i=Promise.resolve();if(t&&t.length>0){const c=document.getElementsByTagName("link");i=Promise.all(t.map(r=>{if(r=Z(r,n),r in A)return;A[r]=!0;const d=r.endsWith(".css"),_=d?'[rel="stylesheet"]':"";if(!!n)for(let s=c.length-1;s>=0;s--){const o=c[s];if(o.href===r&&(!d||o.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${_}`))return;const l=document.createElement("link");if(l.rel=d?"stylesheet":Y,d||(l.as="script",l.crossOrigin=""),l.href=r,document.head.appendChild(l),d)return new Promise((s,o)=>{l.addEventListener("load",s),l.addEventListener("error",()=>o(new Error(`Unable to preload CSS for ${r}`)))})}))}return i.then(()=>e()).catch(c=>{const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=c,window.dispatchEvent(r),!r.defaultPrevented)throw c})},ae={};var $=B('<div id="svelte-announcer" aria-live="assertive" aria-atomic="true" style="position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px"><!></div>'),ee=B("<!> <!>",!0);function te(a,e){j(e,!0);let t=y(e,"components",11,()=>[]),n=y(e,"data_0",3,null),i=y(e,"data_1",3,null);V(()=>e.stores.page.set(e.page)),F(()=>{e.stores,e.page,e.constructors,t(),e.form,n(),i(),e.stores.page.notify()});let c=b(!1),r=b(!1),d=b(null);K(()=>{const s=e.stores.page.subscribe(()=>{h(c)&&(w(r,!0),q().then(()=>{w(d,J(document.title||"untitled page"))}))});return w(c,!0),s});var _=z(a,!0,ee),p=g(_),l=O(O(p));k(p,()=>e.constructors[1],s=>{var o=P(s),f=g(o);R(f,()=>e.constructors[0],m=>{x(m(f,{get data(){return n()},children:(u,re)=>{var C=P(u),L=g(C);R(L,()=>e.constructors[1],S=>{x(S(L,{get data(){return i()},get form(){return e.form}}),T=>t()[1]=T)}),v(u,C)}}),u=>t()[0]=u)}),v(s,o)},s=>{var o=P(s),f=g(o);R(f,()=>e.constructors[0],m=>{x(m(f,{get data(){return n()},get form(){return e.form}}),u=>t()[0]=u)}),v(s,o)}),k(l,()=>h(c),s=>{var o=G(s,!0,$),f=W(o);k(f,()=>h(r),m=>{var u=H(m);N(u,()=>h(d)),D(m,u)},null),D(s,o)},null),v(a,_),U()}const ie=Q(te),ce=[()=>E(()=>import("../nodes/0.ttv3XzEK.js"),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),()=>E(()=>import("../nodes/1.-cgjK3VL.js"),__vite__mapDeps([7,1,2,3,4]),import.meta.url),()=>E(()=>import("../nodes/2.uUJNV5pZ.js"),__vite__mapDeps([8,1,2,5,4,9,10,11]),import.meta.url),()=>E(()=>import("../nodes/3.az_zstXF.js"),__vite__mapDeps([12,1,2,9,10,5,4]),import.meta.url)],le=[],ue={"/":[2],"/scores":[3]},de={handleError:({error:a})=>{console.error(a)}};export{ue as dictionary,de as hooks,ae as matchers,ce as nodes,ie as root,le as server_loads};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["../nodes/0.ttv3XzEK.js","../chunks/disclose-version.73gxhAIW.js","../chunks/runtime.W3UjnrTG.js","../chunks/entry.vu0sIiRg.js","../chunks/index.K1lkvplB.js","../chunks/store.y7lpHhQm.js","../assets/0.s8ReJ1hM.css","../nodes/1.-cgjK3VL.js","../nodes/2.uUJNV5pZ.js","../chunks/each.DMuK-KsK.js","../chunks/main-client.xzPqCEBL.js","../assets/2.5gks_xXy.css","../nodes/3.az_zstXF.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
